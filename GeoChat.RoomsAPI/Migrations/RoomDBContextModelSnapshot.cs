// <auto-generated />
using System;
using GeoChat.RoomsAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeoChat.RoomsAPI.Migrations
{
    [DbContext(typeof(RoomDBContext))]
    partial class RoomDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("GeoChat.RoomsAPI.Entities.Room", b =>
                {
                    b.Property<Guid>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<int>("Range")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = new Guid("0d0b9a01-7246-4fb1-ac70-2f2c5d5f084b"),
                            Description = "My first room",
                            Latitude = 22.5869952,
                            Longitude = 88.439311099999998,
                            Range = 5000,
                            RoomName = "Room1",
                            UserId = "agent1"
                        },
                        new
                        {
                            RoomId = new Guid("65958d08-4e33-40da-a0ac-54442fba0abe"),
                            Description = "Private King room",
                            Latitude = 22.5869952,
                            Longitude = 88.439311099999998,
                            Range = 1000,
                            RoomName = "Kings Room",
                            UserId = "sayan83"
                        });
                });

            modelBuilder.Entity("GeoChat.RoomsAPI.Entities.RoomParticipant", b =>
                {
                    b.Property<Guid>("RoomId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.HasKey("RoomId", "UserId");

                    b.ToTable("Participants");

                    b.HasData(
                        new
                        {
                            RoomId = new Guid("65958d08-4e33-40da-a0ac-54442fba0abe"),
                            UserId = "sayan83"
                        },
                        new
                        {
                            RoomId = new Guid("65958d08-4e33-40da-a0ac-54442fba0abe"),
                            UserId = "slave1"
                        },
                        new
                        {
                            RoomId = new Guid("0d0b9a01-7246-4fb1-ac70-2f2c5d5f084b"),
                            UserId = "agent1"
                        },
                        new
                        {
                            RoomId = new Guid("0d0b9a01-7246-4fb1-ac70-2f2c5d5f084b"),
                            UserId = "slave1"
                        },
                        new
                        {
                            RoomId = new Guid("0d0b9a01-7246-4fb1-ac70-2f2c5d5f084b"),
                            UserId = "sayan83"
                        });
                });

            modelBuilder.Entity("GeoChat.RoomsAPI.Entities.RoomParticipant", b =>
                {
                    b.HasOne("GeoChat.RoomsAPI.Entities.Room", "RoomRef")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomRef");
                });
#pragma warning restore 612, 618
        }
    }
}
